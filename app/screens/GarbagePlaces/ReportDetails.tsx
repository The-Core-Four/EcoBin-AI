import React from 'react';
import { ScrollView, StyleSheet, Text, View, SafeAreaView, Alert, TouchableOpacity, Linking } from 'react-native';
import { useRoute } from '@react-navigation/native';
import * as Print from 'expo-print';
import * as Sharing from 'expo-sharing';
import Header from '../../Components/HeaderAdmin';

const ReportDetails = () => {
  const route = useRoute();
  const { garbagePlaces = [] } = route.params || { garbagePlaces: [] };

  const generatePDF = async () => {
    const htmlContent = `
      <html>
        <head>
          <style>
            body {
              font-family: 'Times New Roman', serif;
              margin: 40px;
              color: #333333;
            }
            .letterhead {
              border-bottom: 2px solid #10B981;
              padding-bottom: 20px;
              margin-bottom: 30px;
            }
            .company-name {
              font-size: 24px;
              font-weight: bold;
              color: #111827;
              margin-bottom: 4px;
            }
            .company-address {
              font-size: 14px;
              color: #6B7280;
            }
            .report-meta {
              margin-top: 20px;
              font-size: 14px;
            }
            .report-title {
              text-align: center;
              font-size: 20px;
              margin: 30px 0;
              text-decoration: underline;
            }
            .content-section {
              margin-bottom: 25px;
            }
            .location-header {
              font-size: 18px;
              color: #10B981;
              margin-bottom: 10px;
            }
            .detail-item {
              margin-bottom: 8px;
              padding-left: 20px;
            }
            .detail-label {
              display: inline-block;
              width: 140px;
              font-weight: bold;
            }
            .footer {
              margin-top: 50px;
              padding-top: 20px;
              border-top: 1px solid #E5E7EB;
            }
            .signature {
              margin-top: 30px;
            }
            .generated-by {
              margin-top: 15px;
              font-size: 12px;
              color: #6B7280;
            }
          </style>
        </head>
        <body>
          <div class="letterhead">
            <div class="company-name">Acobin AI Waste Management</div>
            <div class="company-address">
              123 Eco Park Road, Green City<br>
              Tel: (94) 112-456789 | Email: info@acobin.ai
            </div>
            
            <div class="report-meta">
              <strong>Report Name:</strong> Acobin AI Garbage Place Report<br>
              <strong>Generated At:</strong> ${new Date().toLocaleString()}<br>
              <strong>Generated By:</strong> [User Name] <!-- Replace with actual user data -->
            </div>
          </div>
  
          <div class="report-title">OFFICIAL GARBAGE COLLECTION POINTS REPORT</div>
  
          ${garbagePlaces.map((place) => `
            <div class="content-section">
              <div class="location-header">${place.locationName}</div>
              <div class="detail-item">
                <span class="detail-label">Address:</span>
                ${place.address}
              </div>
              <div class="detail-item">
                <span class="detail-label">Capacity:</span>
                ${place.capacity}
              </div>
              <div class="detail-item">
                <span class="detail-label">Contact Person:</span>
                ${place.contactPerson}
              </div>
              <div class="detail-item">
                <span class="detail-label">Phone Number:</span>
                ${place.phoneNumber}
              </div>
              <div class="detail-item">
                <span class="detail-label">Waste Type:</span>
                ${place.wasteType}
              </div>
            </div>
          `).join('')}
  
          <div class="footer">
            <div class="signature">
              <strong>Authorized Signature:</strong><br>
              <div style="margin-top: 40px; width: 200px; border-bottom: 1px solid #000;"></div>
            </div>
            <div class="generated-by">
              Report generated by Smart Waste System<br>
              ${new Date().toLocaleDateString()} | Acobin AI Waste Management Solutions
            </div>
          </div>
        </body>
      </html>
    `;
  
    try {
      const { uri } = await Print.printToFileAsync({ html: htmlContent });
      if (await Sharing.isAvailableAsync()) {
        await Sharing.shareAsync(uri);
      } else {
        Alert.alert('Error', 'Sharing is not available on this device');
      }
    } catch (error) {
      Alert.alert('Error', 'Failed to generate PDF');
      console.error(error);
    }
  };

  const openInMaps = (address: string) => {
    const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`;
    Linking.openURL(url).catch(() => {
      Alert.alert('Error', 'Failed to open Google Maps');
    });
  };

  return (
    <SafeAreaView style={styles.container}>
      <Header />
      <Text style={styles.title}>Garbage Places Report</Text>
      <ScrollView contentContainerStyle={styles.reportContent}>
        {garbagePlaces.length > 0 ? (
          garbagePlaces.map((place) => (
            <View key={place.id} style={styles.card}>
              <Text style={styles.cardTitle}>{place.locationName}</Text>
              <TouchableOpacity onPress={() => openInMaps(place.address)}>
                <Text style={styles.linkText}>{place.address}</Text>
              </TouchableOpacity>
              <Text style={styles.cardText}>Capacity: {place.capacity}</Text>
              <Text style={styles.cardText}>Contact: {place.contactPerson}</Text>
              <Text style={styles.cardText}>Phone: {place.phoneNumber}</Text>
              <Text style={styles.cardText}>Waste Type: {place.wasteType}</Text>
            </View>
          ))
        ) : (
          <Text style={styles.emptyText}>No garbage places found.</Text>
        )}
      </ScrollView>
      <TouchableOpacity style={styles.downloadButton} onPress={generatePDF}>
        <Text style={styles.downloadButtonText}>Download PDF</Text>
      </TouchableOpacity>
    </SafeAreaView>
  );
};

export default ReportDetails;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F9FAFB',
  },
  title: {
    fontSize: 26,
    fontWeight: 'bold',
    textAlign: 'center',
    marginVertical: 20,
    color: '#111827',
  },
  reportContent: {
    flexGrow: 1,
    padding: 20,
  },
  card: {
    backgroundColor: '#FFFFFF',
    padding: 20,
    borderRadius: 15,
    marginBottom: 15,
    shadowColor: '#000',
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 3,
  },
  cardTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#1F2937',
    marginBottom: 5,
  },
  cardText: {
    fontSize: 14,
    color: '#374151',
    marginBottom: 3,
  },
  linkText: {
    color: '#2563EB',
    textDecorationLine: 'underline',
    marginBottom: 3,
    fontSize: 14,
  },
  downloadButton: {
    width: '50%',
    height: 50,
    borderRadius: 12,
    backgroundColor: '#10B981',
    alignSelf: 'center',
    justifyContent: 'center',
    marginVertical: 15,
  },
  downloadButtonText: {
    fontSize: 16,
    color: '#FFFFFF',
    textAlign: 'center',
    fontWeight: '600',
  },
  emptyText: {
    textAlign: 'center',
    color: '#6B7280',
    marginTop: 20,
    fontSize: 16,
  },
});
